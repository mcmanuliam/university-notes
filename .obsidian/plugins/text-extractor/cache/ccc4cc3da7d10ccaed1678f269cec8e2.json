{"path":"university/year 2/semester 2/User Interaction/Slides/Lecture10.pdf","text":"User Interaction COMPSCI2031 Dr Florian Weidner Florian.Weidner@glasgow.ac.uk Dr Ilyena Hirskyj-Douglas ilyena.hirskyj-douglas@glasgow.ac.uk 1 • Statistical Analysis • Statistical Task • Reading: A crash course in fundamental statistical concepts Recap: What we did last yesterday 2 User Interaction Topics 1. HCI History and Introduction 2. Usability and Heuristics 3. Heuristic Evaluation and Human Cognition 4. Human Perception and Capabilities 5. Experimental Design & Variables Research 6. Personas and Scenarios 7. Surveys in HCI 8. Ethnography 9. Statistical Methods 10. Theories in HCI & User-Centered Design 11. Models of Interaction 12. Large Scale and Mobile HCI 13. Various Users and Ethics 14. Revision & Example Exams & Quiz 3 Theories in HCI Lecture 10 4 Fantastic book about design! 5 Design In Everyday Life 6 Affordances 7 Affordance • An attribute of an object that allows people to know how to use it. → A mouse button invites pushing/clicking by the way it is physically constrained in its plastic shell. • To afford means \"to give a clue\" (Norman, 1988). • When the affordances of a physical object are perceptually obvious it is easy to know how to interact with it. • It is the relationship between physical object and person • Not a property of an object • Objects convey essential info about how people could interact with them • The presence of affordance is jointly determined by object properties and person with capabilities that determine how it could be used →A chair affords sitting, but a chair also affords lifting (to some people) 8 • Anti-affordance is the prevention of interaction: → Design a door without a knob to prevent ‘pulling’ and facilitate ‘pushing’ • To be effective, affordances and anti- affordances must be discoverable • If it can't be perceived, need to signal its presence with a signifier Anti-Affordance 9 • A signifier communicates behaviour • Could be an image, text or sound that makes an affordance apparent • Can be deliberate • E.g. Labels • Can be emergent • Paths are worn onto the ground • Queues of people What is a Signifier? 10 Constraints 11 Constraints • Restricting the possible actions that can be performed. • Prevents errors (ideally) • Guides users towards correct, desired, or useful behaviour • Three types of constraints (Norman, 1999) • Physical – rely on properties of the physical world • e.g. can only insert the correct way: USB-A , bank cards • Cultural – rely on socially learned behaviours • e.g., Moodle relies on roles that make sense to us because we know how a course is run • Logical – rely on trial and common-sense reasoning • e.g. An online form won’t submit. Even if it doesn’t highlight required fields, we can scan through and see if we left one empty – that one’s probably the problem 12 • Exploit people’s everyday common-sense reasoning about the way the world works • Leverage natural mappings • Where do you plug in the mouse? • Where do you plug the keyboard? • Top or bottom connector? • Do the colour-coded icons help? Logical Constraints A 13 • A provides no mapping. • B provides direct adjacent mapping between the icon and connector • C provides colour coding to associate the connectors with the labels → Logical constraint: use reasoning Logical Constraints BC A 14 Forcing Functions • Guiding Interactions with Constraints • Forcing Functions: Preventing action until certain requirements are met. Balance error prevention with frustration • Interlocks – Requiring actions to occur in sequence • Web app that doesn’t offer you functionality until you’re logged in • Lock-Ins – Keeps an action active, preventing action from stopping • Gmail checks if an attachment is attached before sending an email • Lock Outs – Prevents an action from occurring (typically in safety context) • Operators of x-ray machines cannot enter a dangerous value 15 • Cash machine software varies significantly. • When and how long is card in machine? • When do you enter PIN? • Where should forcing functions be implemented? A. At the beginning of all interactions B. Distributed throughout interactions at the point where security is needed C. Some other approach? Where/when should forcing functions be used? 16 Consistency 17 Consistency • Design consistency • Lessons learned from one system transfer to others • Design interfaces to have similar operations and use similar elements for similar tasks • Consistent interfaces are easier to learn and use • internal consistency: designing operations/ interfaces to be the same within an application • external consistency: designing operations/a to be the same across applications • Internal and external consistency can work against each other! → E.g., Banking app: fit with the brand or banking standards? 18 Consistency Confusing cases of external inconsistencies: 19 • People don’t like change! • New learning is required • Which design ‘better’? Irrelevant! → the change is upsetting • Better to be consistent if the new is only slightly better than the old? • If change to a new system, everyone has to change – mixed systems confusing • Standards simplify life but can hinder future development Consistency vs Progress 20 Mapping 21 • Relationship between controls and results • How would you do it? Mapping 22 • Relationship between controls and results • How would you do it? • Many users, many mappings! Mapping https://www.linkedin.com/pulse/ux-mapping-jon-bennallick/ 23 Mapping: Spatial. Better mapping, better design https://www.linkedin.com/pulse/ux-mapping-jon-bennallick/ 24 Feedback 25 Feedback • Sending information back to the user about what has been done • Includes sound, highlighting, animation, … • and a combination 26 Feedback • Sending information back to the user about what has been done • Includes sound, highlighting, animation and a combination of these • E.g., when the screen button is clicked on it provided highlighting, or vibration of the phone • Hard to implement in novel devices Feel the interaction with your lips ? 27 Or vibrations on your hands? 28 Visibility 29 • An elevator control panel • How does it work? • Push button for the floor you want • You push a button, and nothing happens. • Push any other button? Still nothing. • What do you need to do? • It is not visible what to do! Visibility 30 • You need to insert your room card in the elevator to get it to work • How would you make this action more visible? • Make the card reader more obvious • Provide an auditory message that says what to do (in what language?) • Provide a big label next to the card reader that someone enters → Make relevant parts visible → Make what has to be done obvious Visibility 31 • Adaptable interfaces consider behaviours taken by a user and change as a result • How to adapt is challenging: • Could get trapped in a suboptimal design if learning or playing around • Wrong adaptation? • Again, goes back to what is beneficial design, and to whom. One Solution: Adapting Interfaces Reference: Adapting User Interfaces: https://dl.acm.org/doi/10.1145/3411764.3445497 32 Jakob Nielson Ten Usability Heuristics (1993) 1. Visibility of System Status 2. Match between real world and System 3. User Freedom and Control 4. Consistency and Standards 5. Error prevention 6. Recognition over recall 7. Flexibility and efficiency of use 8. Aesthetics and Minimalist Design 9. Recognize, Diagnose, and Recover 10. Help and documentation Don Norman’s Design Principles (1988) 1. Affordance 2. Constraints 3. Consistency 4. Mapping 5. Feedback 6. Visibility Design? Jakob Nielsen. 1994. Usability Engineering. Morgan Kaufmann Publishers Inc., San Francisco, CA, USA. Norman, D. A. (1988). The psychology of everyday things. Basic Books. 33 User Centered Design What is User Centred Design? • Investigative methods and tools e.g., surveys and interviews) • Generative tools (e.g., brainstorming) • Term coined in 1970 • Don Norman adopted to improve peoples' experiences of items. • Also: Human-Centered Design User-Centered Design (or UCD) → Iterative Process Quick words from Don Norman Himself… https://www.youtube.com/watch?v=rmM0kRf8Dbk How does UCD work? How does UCD work? • Goal: Understand the users, tasks and environments • Capture the whole of the users' experience • Two critical things: • Must involve users for evaluation • Ensure long-term monitoring of usage UCD to Consider the Whole User Experience Why is UCD useful? • Powerful way of finding out what works well, what does and why • Users are early warning indicators • Help with usability and accessibility “Being human-centred is an additional cost to any project, so businesses rightly ask whether taking so much time to talk to people, produce prototype designs and so on is worthwhile. The answer is a fundamental ‘yes’.” — David Benyon https://jnd.org/user-centered- system-design-new-perspectives-on-human-computer-interaction/ Planning Context of Use Requirements Design Evaluation • Usability planning and scoping • Usability cost/benefit analysis • Identify stakeholders • Context of use analysis • Survey of existing users • Field study / user observation • Diary keeping • Task analysis • Stakeholder analysis • User cost-benefit analysis • User rqmt interview • Focus groups • Scenarios of use • Personas • Existing system / competitor analysis • Allocation of function.. • Brainstorming • Parallel design • Design guidelines and standards • Design Patterns • Storyboarding • Affinity diagrams • Card sorting • Paper prototyping • Software prototyping • Organizational prototyping • Participatory evaluation • Assisted evaluation • Heuristic or expert eval. • Controlled user testing • Satisfaction questionnaires • Assessing cognitive workload • Critical incidents • Post experience interviews Methods available at UCD stages • Not worth following • Confusion with similar but critically different ideas • User diversity is underestimated • User diversity is overestimated • Belief that users do not know what they need • Belief that one’s job does not require it or permit it • Belief in the power of reason • Belief that design guidelines should be sufficient • Belief that good design means getting it right first time • Belief that the development process will be lengthened • Belief that iteration is just fine-tuning • Belief in the power of technology to succeed “Principles are undervalued” (Gould and Lewis, 1985) Problems with User Centred Design • Takes time, demands a lot and effort • Difficult to integrate into current processes • Difficult to integrate into the team For reference: https://medium.com/therectangles/the-challenges-of-user-centered-design-207b78ae5354 Terminology • Some people also call these human-centred designs (not wanting to call people users..) • More than human-centered design • Interesting question of how do we centre things around non-human users? • How do we centre things around children? • Can we even centre around anything other than ourselves? • User Experience (UX) • Meeting needs & making joy • UX and UI are not the same thing • UX and Usability also different • User-centered design is what you do to achieve usable systems • Usability is the way a user-centered design product is evaluated In UCD often talk about User Experience For reference: https://www.nngroup.com/articles/definition-user-experience/ Summary • UCD/HCD is a theory and concept that can be applied • Four stages: • Context, • Requirements • Design solutions • Evaluate against requirements • Not always so easy to implement, but can give rewards • Introduced UX and the differences in UI and usability Questions? Comments? Concerns? 48 User Interaction Topics 1. HCI History and Introduction 2. Usability and Heuristics 3. Heuristic Evaluation and Human Cognition 4. Human Perception and Capabilities 5. Experimental Design & Variables Research 6. Personas and Scenarios 7. Surveys in HCI 8. Ethnography 9. Statistical Methods 10. Theories in HCI & User-Centered Design 11. Models of Interaction 12. Large Scale and Mobile HCI 13. Various Users and Ethics 14. Revision & Example Exams & Quiz 49 Design Theory Task • In your group, pick two principles of design theory (Norman) and look at the design of the Glasgow University website. Think about: • How does this principle apply to this design? • What changes can be made to meet these design principles? • Write in your teams' channel what design principle you picked, how this applies to the design, and what changes you would make. ➔ Write your answer to these in your team's space. 50 • Norman, Donald A. The Psychology of Everyday Things. Basic Books, 1988. https://search.worldcat.org/title/17550682 • Jakob Nielsen. 1994. Usability Engineering. Morgan Kaufmann Publishers Inc., San Francisco, CA, USA. https://dl.acm.org/doi/10.5555/2821575 Reading: optional books ☺ 51 Thanks! 52","libVersion":"0.3.2","langs":""}