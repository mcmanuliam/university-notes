{"path":"software engineering/year 2/semester 2/Algorithmics/Tutorial/2. Strings and Text algorithms/2.3 Pattern Matching/GAAlgs_Tutorial4.pdf","text":"Algorithmics - Tutorial Sheet 4 Strings and text algorithms 1. [Work in pairs] Construct the border table B for the KMP algorithm for the string: agcagacagcacg 2. [Work in pairs] Trace the KMP algorithm for the string/pattern s = abacab and the text t = abacaabaccabacabaabb 3. Given two character strings s = s1s2 . . . sn and t = t1t2 . . . tn, design an O(n) time algorithm to determine whether t is a cyclic shift of s. In other words, the algorithm should determine whether there exists an index k where 1 ≤ k ≤ n such that si = tk+i (mod n) for all 1 ≤ i ≤ n. 4. [Work in pairs] Indicate precisely which character comparisons would be made if the Boyer- Moore algorithm were used to locate the first occurrence of the string s = agcga in the text t = agcgcctgatagcgacagt. 5. Give a pseudocode description of a linear-time implementation of the setUp method that creates the last-occurrence table for a string s for use by the Boyer-Moore algorithm. 6. Given the pseudocode for the Boyer-Moore algorithm in the lecture notes, update it to ensure the algorithm scans the entire string t and returns a list of all occurrences, if any.","libVersion":"0.3.2","langs":""}