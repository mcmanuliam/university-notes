{"path":"university/year 2/semester 1/Data Storage and Retrieval/Slides/3 .Data Modelling, ER Diagram's.pdf","text":"Data Storage and Retrieval Lecture 3 Data Modelling: ER Diagrams Dr. Graham McDonald Graham.McDonald@glasgow.ac.uk What is an ER Model? • Entity Relationship Model: A conceptual data model • later mapped to a logical data model or schema (i.e. definitions of TABLES) • this in turn is mapped to a physical model by the DBMS • Usually described using Entity-Relationship Diagrams • Describes type of information to be stored in a database • Provides a pictorial overview and classifications of used terms and their relationships • The most common method for modelling of a DB 2 The Entity-Relationship Model • Data in an ER Model is described in terms of three key concepts: • Entities • Attributes • Relationships 3 Entities • An entity is a uniquely identifiable object in the real world about which we wish to store data • For example: The Bank of Scotland, The University of Aberdeen, Tony Blair, Celtic Football Club, BBC, my car……. • A thing which is recognised as being capable of an independent existence and which can be uniquely identified 4 Entities • Entities are grouped together into ‘categories’ called entity types or entity sets • Employee, Department, Project • An entity is an instance of a given entity-type • There are usually many instances of an entity-type 5 Entity Types Entity types can be thought of as (common) nouns • Can be a physical object such as a house or a car • Can be an event such as a house sale or a car service • Can be a concept such as a customer transaction • Proper nouns indicate instances of entities • Joe Bloggs is a Customer Employee 6 Attributes Attributes are properties that describe an entity (type) • BT: name, address, annual profit • Patient John Smith: name, address, national insurance number, date of admission. Employee dob name 7 It is expected that all instances of a given entity type will have the same attributes ¡ an entity type defines a set of entities that have the same attributes ¡ i.e. We record same details for employees Jane Black and Gregory White Attributes are drawn as ovals, and attached to the boxes representing entity types with lines • Simple • indivisible value • age, gender Employee Gender 8 Attributes: Simple (atomic) vs composite Attributes: Simple (atomic) vs composite • Composite • composed of a set of component values • address, date of birth Employee Address House Street City 9 Other Kinds of Attribute • Single-valued vs multi-valued • multi-valued stores a set of values • Indicated by double-lined attribute oval • Examples: locations for a department; hobbies for a person Dept Locations 10 Other Kinds of Attribute • Derived vs base • base are explicitly stored • derived can be calculated by a procedure Ø(e.g., age from birthday) Employee Age 11 DoB Primary Key • An Entity type will usually have key attribute(s): • one (or possibly more) of the attributes which are unique for all entity instances • for example Ø A book’s ISBN Ø A date (composite attribute M/D/Y) 1213 Key Attributes • The primary key attributes of an entity type is an attribute whose values are distinct for each entity • We underline key attributes • Sometimes several attributes (a composite attribute) together form a key • NB: Such a composite should be minimal • E.g. The combination of account number AND sort code are unique in UK banking NI dob Name Person • A subtype is an entity type that inherits the properties of its parent type • e.g. programmer & manager can be represented as subtypes of employee • Employee attributes (name, NIN, etc) belong to programmer and manager by virtue of being subtypes of employee • Subtypes may be • disjoint - must belong to exactly one subtype • inclusive - may belong to either or both 14 Subtyping subtyping Subtyping Notation d ‘d’ for disjoint or ‘o’ for inclusive Manager Programmer Employee d name Capacity language Em p lo ye e S u b -ty p e E xa m p le (Supertype) (subtypes) Relationships • Captures how two or more entity types are related • Can be thought of as verbs, linking two or more nouns • Examples: – an owns relationship between a company and a computer – a supervises relationship between an employee and a department – a performs relationship between an artist and a song – a proved relationship between a mathematician and a theorem 17 Relationships • Relationships types represent the interaction between entity types • For example the entities in types “employee” and “dept” can interact through the relationship “worksIn” • Relationship types are represented by diamonds • They connect the participating entity types with straight lines dname budget Employee Dept WorksIn 1819 Relationship attributes • Relationships can also have attributes • NB: A relationship must be uniquely determined by the participating entities, without reference to the relationship attributes • E.g. Mark works_In Computing Science, since 2009 • E.g. John works_In Computing Science, since 2009 Works_in NI dob Name Employee DID budget dname Department since Relationship Degrees • The Degree of a relationship is the number of entity types participating • Binary relationships Ø 2 participating entity types Ø Employee works for Department • N-ary (e.g. Ternary) relationships Ø >=3 participating entity types Ø a Manager manages a Project in a Department 20 Binary Relationships • 2 participating entity types Ø Teacher teaches Subject 2122 N-ary Relationships • Although relatively rare, n-ary relationships can exist • e.g. ternary (degree 3): Works_in2 NI dob Name Employees DID budget dname Department since Locationsaddress capacity Remember: These are RARE! Example: Ternary Relationships 3 participating entity types Ø An agent negotiates the price between a seller and buyer Buyer Seller Agent Negotiates price Example Ternary Relationship Remember: These are RARE! 23 Cardinality Constraints on Relationship Types • For example: • An employee can work in many departments; a department can have many employees • In contrast, each department has at most one manager • The cardinality specifies the number of entity instances that can participate from each side of the relationship of a binary relationship • One to one (1:1) • One to many (1:N) • Many to Many (N:M) M:N N:1 1:1 M N N 1 1 1 Note: Sometimes this is denoted using different arrowheads 24 Cardinality – 1:1 • One-to-one (1-1) • Each manager manages ONLY one project • Each project is managed by ONLY one manager ManagesManager Project 1 1 25 Cardinality – 1:N A department cannot have more than one manager (but it may be that an individual manages multiple departments) 1:N --- One to many Manages NI dob Name Employees DID budget dname Departments since 1 M 26 Cardinality – N:M N:M -- Many to many Departments may employ more than one person at a time, and an individual person may be employed by more than one department Employs NI dob Name Employees DID budget dname Departments since N M 27 • A double line indicates a participation constraint - totality • all entities in the entity set must participate in at least one relationship in the relationship set; ManagesEmployee Dept 1 N Every department must have a manager All depts MUST have managers 28 Participation Constraints on RelationshipsParticipation Constraints on Relationships • A double line indicates a participation constraint - totality • all entities in the entity set must participate in at least one relationship in the relationship set; ManagesEmployee Dept 1 N Every department must have a manager Cardinality + Participation Constraints = Structural Constraints 29 Total Participation Every student must be a member of a team Every team needs to have a leader A double line indicates the total participation constraint in an ER model Note - the participation of student in LeaderOf is partial, because a student might be a team leader 30 Weak Entity Types • Do not have primary key (attributes) of their own • Depend on other entities to guarantee uniqueness Child depends on Employee name NIN weak entity 31 Weak Entity Types • Depend on other entities to guarantee uniqueness • Do not have sufficient attribute(s) to form a primary key of their own • A weak entity type must have total participation in this identifying relationship depends on Employee name NIN name not guaranteed unique But together, name + employee’s NIN can be used as keypartial key (dotted ul) identifying relationship weak entity identifying owner Child 32 More on Relationships - 1 • There may be more than one relationship between entity types Employee Report Writes Presents 33 More on Relationships - 2 • An entity type may be in a relationship with itself • this is a recursive relationship • We name the ‘roles’ of each side of the relationship Employee Supervises Subordinate Supervisor 1 N 34 More on Relationships - 3 Recall: relationships may themselves have attributes Employee Report Writes Presents room no 35 From written Scenario to an ER Model  Identify the Entities, their Attributes, and all Relationships involved in any given scenario  Represent this in an Entity-Relationship Diagram  ER Diagram (and model) can then be used to implement the actual relationship tables in the database itself. 36 Constructing an ER diagram 1. Identify the entity types (in boxes) 2. Identify each entity types’ properties 3. Decide which properties are attributes (connected to entity in oval) 4. Decide which attributes could be keys 5. Select primary key (underlined attribute) 6. Determine which properties infer relationships (labelled diamond between the participating entities) 7. Decide on the cardinality and participation of the relationship (numbers at entities involved in relationship; single line Vs double line at entity) 37 strong entity type weak entity type attribute multi-valued attribute name key attribute composite attribute relationship Identifying relationship relationship cardinality 1 N total participation partial participation ER Diagram Notation","libVersion":"0.3.2","langs":""}