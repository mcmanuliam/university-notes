{"path":"software engineering/year 2/semester 1/Systems Programming/Slides/1. Learning C/Components of a C Program.pdf","text":"Components of a C Program Yehia Elkhatib COMPSCI2030 Systems Programmingmain() o The only one required for any C program o It denotes the entry point to the program § there can only be one and exactly one o It returns an int to signify the exit code § 0 = normal execution and termination, i.e. at last statement in main § Non Zero Exit Code = abnormal termination § if no return statement, an implicit return 0 is executed o Can be used to pass command line arguments – next lecture #include o Instructs the compiler to add contents of a file to your program § they are included as is, i.e. you do not need to modify their logic o Include files are usually called header files § pre-existing libraries, e.g. #include <stdio.h> § user-defined , e.g. #include “myheader.h” o Commonly used library header files § stdio.h § stdlib.h § string.h § limits.h Variables o Variable – name assigned to a location in memory to store data o Have to be defined before using, informing the compiler of: § variable name § data type o Names § can contain letters, digits, and underscores § must start with a letter (underscore also accepted, but not recommended) § case-sensitive § must not be a reserved keyword; e.g. int, return, sizeof o C is statically typed => every variable/expression has to have a data type that is known without running the program VariablesData Types o What is the meaning of the bit-pattern 1000 0001 ? § maybe: 129 if it represents an unsigned 8-bit integer value § maybe: -127 if it represents a signed 8-bit integer value (2’s compl.) § maybe: the colour blue? or an ASCII character? ... etc. o The programmer gives meaning to a collection of bits o The computer needs a way to identify different types of meanings o By declaring a variable with a certain data type we decide what the bit-pattern in memory means Data Types o By choosing a particular data type, we control how much memory we use Variable Declarations o Before using a variable, it must be declared o A variable declaration tells the compiler the name and type § The declaration may also initialize the variable to a speciﬁc value o Using an undeclared variable throws a compiler error o Variables are stored at locations in memory that do not change over their lifetimes (explained in the next lecture) o typedef creates a new name for an existing data type § essentially creating a synonym § typically used with structs Statically Typed Variables o To assist us writing meaningful programs the compiler enforces that computations preserve the meaningful representation of our data § e.g. for x+1 the compiler ensures that a meaningful addition of the value one and x is performed o By enforcing operations to respect data types, the compiler prevents meaningless computations Task 2.A Lab Sheet Boolean Variables o In C every integer can be interpreted as a boolean, where 0 represents false and any other value true o In C99 standard, _Bool was added as a data type o Is an unsigned int o Values: 0, 1 o Takes 1 bit of memory o Alternative: bool from stdbool.h § values: true, false Symbolic Constants – two ways o The #define directive § “hey compiler, ﬁnd and replace each of these names with this value” § notice: no semicolon § by convention, names are uppercase so they are easy to distinguish § by convention, group all #define statements before the main() function • can be placed anywhere, but a constant is only valid for code that follows its #define o The const keyword § a modiﬁer that can be applied to any variable declaration § a value initialized at declaration is prohibited from being changed later Task 2.B Lab Sheet Statements o An instruction that directs the computer to carry out some task o End with a semicolon § except for preprocessor directives such as #define and #include o Are not white-space sensitive Loops o for, while, do-while o Syntax similar to Java Ending loops early o You might want to exert more control over loop execution o break § could be used with for, while, do-while (and switch) § execution immediately exits the loop o continue § the next iteration of the enclosing loop begins § statements between continue and the end of the loop are not executed Exit when reaching a multiple of 7 Print all integers but multiples of 7 switch o Lets you execute different statements based on an expression o Useful when the expression can have more than 2 values § if is limited to evaluating an expression as true or false o If a match is found between expression and one of the values: execution is transferred to the statement that follows the case label o Otherwise, execution is transferred to the statement following the optional default label Task 2.C Lab Sheet Components of a program – to be continued o Functions o …in the next lecture Question time 1. Why not always use the larger variables, such as long int and double instead of int and float to hold bigger numbers? 2. What happens if you put a number into a type that is not big enough to hold it? 3. In what variable type would you best store the following values? § The number of Facebook friends a person has § The radius of a circle § Your annual salary § A person’s first initial § The distance to a star in miles","libVersion":"0.3.2","langs":""}