{"path":"software engineering/year 2/semester 1/Practical Algorithms/Slides/3. Data Collections/Sets.pdf","text":"Sets The “Mathsy” Perspective Thi s Photo by Unknown Author i s l icensed under CC BY-SA SETS - MOTIVATION Study collections in an organized fashion Sets - Introduction Set theory is a very important area of mathematics. The set is considered the most fundamental notion in all of mathematics! The notion of functions is built on top of sets: A function assigns to each element of one set, exactly one element of another set Set: Definition • A set is a collection of objects (called its elements/members) with a key property: membership • That is: \"is this element a member of this set or not\"? • Hence a set is an unordered collection of (unique) objects. • so, no concept of first element, 𝑛𝑡ℎ element, neighbouring element, etc. • repetition does not matter • has no impact on whether or not an element is a member of a set • A set is said to contain its elements. • The notation 𝑎 ∈ 𝐴 denotes that 𝑎 is an element of the set 𝐴. • If 𝑎 is not a member of 𝐴, we write: 𝑎 ∉ 𝐴 Notations for Describing a Set • Roster notation • Set-builder notation Roster Notation • 𝑆 = {𝑎, 𝑏, 𝑐, 𝑑} • Order has no effect: 𝑆 = {𝑎, 𝑏, 𝑐, 𝑑} = {𝑏, 𝑐, 𝑎, 𝑑} • Multiplicity is irrelevant: 𝑆 = {𝑎, 𝑏, 𝑐, 𝑑} = {𝑎, 𝑏, 𝑐, 𝑏, 𝑐, 𝑑} • Ellipses (…) may be used to describe a set without listing all its members, when the pattern can be clearly derived from the context: 𝑆 = 𝑎, 𝑏, 𝑐, 𝑑, … , 𝑧 𝑆 = {1, 2, 3, … } Roster Notation — Limitations • Using the roster method, try to describe: • All pair of natural numbers (x,y) that satisfy the equation x + y = 1000 • All positive rational number ➢ Either not possible, or very inconvenient… Set-Builder Notation • Specify the property/properties that characterize its membership: 𝑆 = {𝑥 | 𝑥 𝑖𝑠 𝑎 𝑝𝑜𝑠𝑖𝑡𝑖𝑣𝑒 𝑖𝑛𝑡𝑒𝑔𝑒𝑟 𝑙𝑒𝑠𝑠 𝑡ℎ𝑎𝑛 100} 𝑂 = {𝑥 | 𝑥 𝑖𝑠 𝑎𝑛 𝑜𝑑𝑑 𝑝𝑜𝑠𝑖𝑡𝑖𝑣𝑒 𝑖𝑛𝑡𝑒𝑔𝑒𝑟 𝑙𝑒𝑠𝑠 𝑡ℎ𝑎𝑛 10} 𝑃 = {𝑥 ∈ ℤ+ | 𝑥 𝑖𝑠 𝑜𝑑𝑑 𝑎𝑛𝑑 𝑥 < 10} • A predicate may be used for succinctness (where a predicate is basically a logical statement that can be True or False, depending on some variable(s).) 𝑆 = {𝑥 | 𝑃(𝑥)} • Example: 𝑆 = {𝑥 | 𝑃𝑟𝑖𝑚𝑒(𝑥)} • Example: Set of positive rational numbers: ℚ+ = {𝑥 ∈ ℝ | 𝑥 = 𝑝/𝑞, for some positive integers 𝑝, 𝑞} | can be read as “such that” ∈ can be read as “belongs to” 𝑷(𝒙) here means 𝑃 is a predicate that is True for 𝑥 Some Common Sets • Natural numbers ℕ = {0, 1, 2, 3, … } • Integers ℤ = {… − 3, −2, −1, 0, 1, 2, 3, … } • Positive integers ℤ+ = {1, 2, 3, 4, 5, … } • Rational numbers ℚ = 𝑝 𝑞 𝑝, 𝑞 ∈ ℤ and 𝑞 ≠ 0} • Real numbers ℝ Universal Set and Empty SetUniversal Set and Empty Set • The universal set U is the set containing everything currently under consideration. • Sometimes implicit • Sometimes explicitly stated. • Depends on context. • The empty set ∅ = {} is the set with no elements. “Venn Diagram” is useful for illustrating relationships between sets Set EqualitySome pre-requisite symbols ∀ For all A → B If A is true, then B is true 𝐴 𝐵 A is true if and only if B is true ∧ Logical AND ∨ Logical OR Set EqualitySet Equality Two sets are equal if and only if they have the same elements. • Therefore if 𝐴 and 𝐵 are sets, then 𝐴 and 𝐵 are equal if and only if ∀𝑥(𝑥 ∈ 𝐴 ⟷ 𝑥 ∈ 𝐵) • We write 𝐴 = 𝐵 if 𝐴 and 𝐵 are equal sets. • Examples: {1, 3, 5} = {3, 5, 1} {1, 5, 5, 5, 3, 3, 1} = {1, 3, 5} {1, 3, 7} ≠ {1, 3} Subsets ht tps :/ /u plo ad.w iki medi a.org/ wi kip edi a/comm ons /4 /48 /Land lo cked _coun trie s.png Subsets — Definition • The set 𝐴 is a subset of 𝐵, denoted by 𝐴 ⊆ 𝐵, if and only if: every element of 𝐴 is also an element of 𝐵. • Formally: 𝐴 ⊆ 𝐵 if and only if ∀𝑥(𝑥 ∈ 𝐴 → 𝑥 ∈ 𝐵 ) • Note that: ➢ ∅ ⊆ 𝑆 for every set 𝑆. ➢ 𝑆 ⊆ 𝑆 for every set 𝑆. Venn diagram Subsets and Equality • Two set are equal if and only if they are subsets of each other A = B if and only if 𝐴 ⊆ 𝐵 ∧ 𝐵 ⊆ 𝐴 “Proper” Subset • We say that 𝐴 is a proper subset of 𝐵, if and only if: ➢𝐴 is a subset of 𝐵, but 𝐴 is not equal to 𝐵: 𝐴 ⊆ 𝐵 ∧ 𝐴 ≠ 𝐵 • In other words: • Every element of A is also an element of B • But there are some elements of B that are not in A Set Cardinality Set Cardinality The cardinality of a finite set A, denoted by |A|, is the number of (distinct) elements of A. Examples: • ∅ = 0 • Let 𝑆 be the set of all letters of the English alphabet. Then |𝑆| = 26 • |{1, 2, 3}| = 3 • |{∅}| = 1 • Set of integers? Set Cardinality The cardinality of a finite set A, denoted by |A|, is the number of (distinct) elements of A. Examples: • ∅ = 0 • Let 𝑆 be the set of all letters of the English alphabet. Then |𝑆| = 26 • |{1, 2, 3}| = 3 • |{∅}| = 1 • The set of integers is infinite! (∞) • The “cardinality” of infinite sets is a somewhat trickier topic. • Not all “infinities” are equal! Power Sets https://upload.wikimedia.org/wikipedia/commons/thumb/e/ea/Powerset_of_3.svg/407px-Powerset_of_3.svg.png Power Sets The power set of a given set 𝐴, denoted 𝒫(𝐴), is the set of all subsets of 𝐴. • Example: If 𝑆 = {𝑎, 𝑏, 𝑐} then 𝒫 𝐴 = {∅, {𝑎}, {𝑏}, {𝑐}, {𝑎, 𝑏}, {𝑎, 𝑐}, {𝑏, 𝑐}, {𝑎, 𝑏, 𝑐}} • If a set has 𝑛 elements, then the cardinality (i.e. size) of the power set is 2𝑛. That is, ➢ 𝐴 = 𝑛 → 𝒫 𝐴 = 2 𝑛 Cardinality of Power Sets • Let 𝑆 = 𝑎, 𝑏, 𝑐 . Each subset of 𝑆 can be represented as a bit string of length 𝑆 = 3 , where each component is: −1 if corresponding element is a member of 𝑆 −0 if not a member • Therefore, the size of 𝒫(𝑆) is 2𝑛: − the number of bit strings of length 𝑛 (we will see at a later unit exactly why…) a b c 0 0 0 ∅ 0 0 1 {c} 0 1 0 {b} 0 1 1 {b,c} 1 0 0 {a} 1 0 1 {a,c} 1 1 0 {a,b} 1 1 1 {a,b,c} Cartesian Product René Descartes (1596-1650) Cartesian Product: Two Sets The Cartesian product of two sets 𝐴 and 𝐵, denoted by 𝐴 × 𝐵, is the set of ordered pairs (a,b) where a ∈ A and b ∈ B . Example: A = {a,b} B = {1,2,3} A × B = {(a,1),(a,2),(a,3), (b,1),(b,2),(b,3)} Can be generalized to any number of sets… Cartesian Product Example: Cluedo! https://www.flick r.com/photos/a ntony may fie ld/15193073708 https://www.ne edpi x.com/photo/download/337140/wire-fra me-straig ht-six-e xemptions-cube-rec ta ng le-g ri d-fre e-picture s-fre e-photos-free-ima ge s-royal ty-fre e If 𝑆 = set of all suspects 𝑊 = set of all weapons 𝐿 = set of all locations Then the cartesian product 𝑆 × 𝑊 × 𝐿 will describe exactly all possible “murder scenarios”, i.e., all possible “configurations” of the game. Set OperationsBoolean Algebra! • Set theory can be interpreted as an instance of an algebraic system called a Boolean Algebra. • We will look at another Boolean algebra later called “propositional calculus” • The operators in set theory are analogous to the corresponding Boolean operators we have already seen • Recall the definition of universal set U • All sets are assumed to be subsets of U George Boole (1815–1864) Union • Definition: The union of the sets 𝐴 and 𝐵, denoted by 𝐴 ∪ 𝐵, is the set: • Example: What is {1, 2, 3} ∪ {3, 4, 5} ? Answer: {1, 2, 3, 4, 5} 𝐴 ∪ 𝐵 Analogous to the logical OR Intersection • Definition: The intersection of sets A and B, denoted by A ∩ B, is • Note: if the intersection 𝐴 ∩ 𝐵 is empty, then sets 𝐴 and 𝐵 are said to be disjoint. • Example: What is {1, 2, 3} ∩ {3, 4, 5} ? Answer: {3} • Example: What is {1, 2, 3} ∩ {4 , 5, 6} ? Answer: ∅ 𝑨 ∩ 𝑩 Analogous to the logical AND Multiple sets Notation for unions and intersections over sets 𝐴1, 𝐴2, … , 𝐴𝑛 ሩ 𝑖=1 𝑛 𝐴𝑖 = 𝐴1 ∩ 𝐴2 ∩ ⋯ ∩ 𝐴𝑛 ራ 𝑖=1 𝑛 𝐴𝑖 = 𝐴1 ∪ 𝐴2 ∪ ⋯ ∪ 𝐴𝑛 Complement Definition: the complement of 𝐴 (with respect to a given universal set 𝑈), denoted by ҧ𝐴 (or 𝐴 𝑐) is the set: ҧ𝐴 = 𝑥 ∈ 𝑈 𝑥 ∉ 𝐴} Example: If 𝑈 is the positive integers less than 100, what is the complement of {𝑥 | 𝑥 > 70} ? Answer: {1, 2, … , 70} 𝐴 𝑈 Venn Diagram for Complement ҧ𝐴 Ā Analogous to the logical NOT Difference Definition: The difference of 𝐴 from 𝐵, denoted by 𝐴 – 𝐵 (or 𝐴 ∖ 𝐵), is the set containing the all elements of 𝐴 that are not in 𝐵. 𝐴 − 𝐵 = {𝑥 | 𝑥 ∈ 𝐴 ∧ 𝑥 ∉ 𝐵} = 𝐴 ∩ ത𝐵 • 𝐴 − 𝐵 is also called the complement of B with respect to A 𝐴 − 𝐵 Set Identities & Equivalences • Identity laws • Domination laws • Idempotent laws • Double Complement law • Commutative laws • Associative laws • Distributive laws Set Identities & Equivalences • De Morgan’s laws • Absorption laws • Complement laws • Complement conversion to difference Set Identities & Equivalences","libVersion":"0.3.2","langs":""}