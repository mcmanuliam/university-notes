{"path":"university/year 2/semester 1/Practical Algorithms/Keynotes/8. Logical Equivalences.pdf","text":"Practical Algorithms - Logical Equivalences Identity laws: • P ∧ true ≡ P • P ∨ false ≡ P Domination laws: • P ∨ true ≡ true • P ∧ false ≡ false Idempotent laws: • P ∧ P ≡ P • P ∨ P ≡ P Double negation law: • ¬(¬P ) ≡ P Commutative laws: • P ∧ Q ≡ Q ∧ P • P ∨ Q ≡ Q ∨ P Associative laws: • (P ∧ Q) ∧ R ≡ P ∧ (Q ∧ R) • (P ∨ Q) ∨ R ≡ P ∨ (Q ∨ R) Distributive laws: • P ∨ (Q ∧ R) ≡ (P ∨ Q) ∧ (P ∨ R) • P ∧ (Q ∨ R) ≡ (P ∧ Q) ∨ (P ∧ R) De Morgan laws: • ¬(P ∧ Q) ≡ ¬P ∨ ¬Q • ¬(P ∨ Q) ≡ ¬P ∧ ¬Q Contradiction and tautology laws: • P ∧ ¬P ≡ false • P ∨ ¬P ≡ true Implication law: • P → Q ≡ ¬P ∨ Q Exclusive or and biconditional laws: • P ⊕ Q ≡ (P ∨ Q) ∧ ¬(P ∧ Q) • P ↔ Q ≡ (P → Q) ∧ (Q → P ) Quantifier laws: • ∀x. ∀y. Q(x, y) ≡ ∀y. ∀x. Q(x, y) • ∃x. ∃y. Q(x, y) ≡ ∃y. ∃x. Q(x, y) • ¬(∃x.¬P (x)) ≡ ∀x. P (x) • ¬(∀x.¬P (x)) ≡ ∃x. P (x) • ∀x.(P (x) ∧ Q(x)) ≡ ∀x.P (x) ∧ ∀x. Q(x) • ∃x.(P (x) ∨ Q(x)) ≡ ∃x.P (x) ∨ ∃x. Q(x)","libVersion":"0.3.2","langs":""}